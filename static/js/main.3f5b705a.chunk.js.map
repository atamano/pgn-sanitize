{"version":3,"sources":["Copy.tsx","helper.ts","Home.tsx","index.tsx"],"names":["CopyToClipboard","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","showTooltip","onCopy","content","copy","setState","handleOnTooltipClose","inherits","createClass","key","value","react","Tooltip","assign","open","title","leaveDelay","onClose","props","TooltipProps","children","React","HEADER_REGEX","RegExp","removeLineReturns","str","replaceAll","trim","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Footer","react_default","a","createElement","Box","sx","p","Typography","variant","color","align","Link","href","Home","_useState","useState","_useState2","slicedToArray","rawPgn","setRawPgn","_useState3","_useState4","sanitizedPgn","setSanitizedPgn","useEffect","pgn","headerRegexResults","exec","headerString","replace","sanitizePgn","onFileUpload","file","reader","FileReader","onload","_ref","asyncToGenerator","_callee","event","text","_context","target","_x","readAsText","style","textAlign","AppBar","position","Toolbar","noWrap","Container","maxWidth","my","component","gutterBottom","TextareaAutosize","onChange","e","minRows","maxRows","placeholder","width","es","onDrop","acceptedFiles","_ref2","isDragActive","getRootProps","getInputProps","mb","Button","files","hidden","Stack","spacing","Divider","Copy","_ref3","onClick","ml","disabled","ReactDOM","createRoot","document","getElementById","render","StrictMode","CssBaseline","src_Home"],"mappings":"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","file":"static/js/main.3f5b705a.chunk.js","sourcesContent":["import { Tooltip, TooltipProps } from \"@mui/material\";\nimport copy from \"clipboard-copy\";\nimport * as React from \"react\";\n\ninterface ChildProps {\n  copy: (content: any) => void;\n}\n\ninterface Props {\n  TooltipProps?: Partial<TooltipProps>;\n  children: (props: ChildProps) => React.ReactElement<any>;\n}\n\ninterface OwnState {\n  showTooltip: boolean;\n}\n\n/**\n * Render prop component that wraps element in a Tooltip that shows \"Copied to clipboard!\" when the\n * copy function is invoked\n */\nclass CopyToClipboard extends React.Component<Props, OwnState> {\n  public state: OwnState = { showTooltip: false };\n\n  public render() {\n    return (\n      <Tooltip\n        open={this.state.showTooltip}\n        title={\"Copied to clipboard!\"}\n        leaveDelay={1500}\n        onClose={this.handleOnTooltipClose}\n        {...(this.props.TooltipProps || {})}\n      >\n        {this.props.children({ copy: this.onCopy }) as React.ReactElement<any>}\n      </Tooltip>\n    );\n  }\n\n  private onCopy = (content: any) => {\n    copy(content);\n    this.setState({ showTooltip: true });\n  };\n\n  private handleOnTooltipClose = () => {\n    this.setState({ showTooltip: false });\n  };\n}\n\nexport default CopyToClipboard;\n","const HEADER_REGEX = new RegExp(\n  \"^(\\\\[((?:\\\\r?\\\\n)|.)*\\\\])\" + \"(?:\\\\s*\\\\r?\\\\n){2}\"\n);\n\nfunction removeLineReturns(str: string): string {\n  return str.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \").trim();\n}\n\nexport function sanitizePgn(pgn: string): string {\n  pgn = pgn.trim();\n  const headerRegexResults = HEADER_REGEX.exec(pgn);\n  const headerString = headerRegexResults\n    ? headerRegexResults.length >= 2\n      ? headerRegexResults[1]\n      : \"\"\n    : \"\";\n\n  if (headerString != \"\") {\n    pgn = removeLineReturns(pgn.replace(headerString, \"\"));\n\n    return `${headerString}\\n\\n${pgn}`;\n  }\n\n  return removeLineReturns(pgn);\n}\n","import {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  Divider,\n  Link,\n  TextareaAutosize,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport { Stack } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport CopyToClipboard from \"./Copy\";\nimport { sanitizePgn } from \"./helper\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {\" Open source project \"}\n          <Link color=\"inherit\" href=\"https://github.com/atamano/pgn-sanitize\">\n            hosted on github\n          </Link>\n        </Typography>\n      </Box>\n    </footer>\n  );\n}\n\nfunction Home() {\n  const [rawPgn, setRawPgn] = useState(\"\");\n  const [sanitizedPgn, setSanitizedPgn] = useState(\"\");\n\n  useEffect(() => {\n    setSanitizedPgn(sanitizePgn(rawPgn));\n  }, [rawPgn]);\n\n  const onFileUpload = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      if (!event || !event.target) {\n        return;\n      }\n      const text = event.target.result;\n      if (!text) {\n        setRawPgn(\"\");\n        return;\n      }\n      const rawText = text as string;\n      setRawPgn(rawText);\n    };\n    reader.readAsText(file);\n  };\n\n  const onClear = () => {\n    setRawPgn(\"\");\n  };\n\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            PGN Cleaner\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <section>\n        <Container maxWidth=\"md\">\n          <Box sx={{ my: 4 }}>\n            <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n              Cleanup your chessbase PGN\n            </Typography>\n          </Box>\n          <TextareaAutosize\n            onChange={(e) => setRawPgn(e.target.value)}\n            minRows={15}\n            maxRows={15}\n            placeholder=\"Copy and paste your PGN here\"\n            style={{ width: \"100%\" }}\n            value={rawPgn}\n          />\n          <Dropzone\n            onDrop={(acceptedFiles) =>\n              !!acceptedFiles.length && onFileUpload(acceptedFiles[0])\n            }\n          >\n            {({ isDragActive, getRootProps, getInputProps }) => (\n              <Box {...getRootProps()} sx={{ mb: 4 }}>\n                <Button\n                  variant={isDragActive ? \"contained\" : \"outlined\"}\n                  component=\"label\"\n                >\n                  Or drop your file here\n                  <input\n                    {...getInputProps()}\n                    onChange={(e) =>\n                      e.target &&\n                      e.target.files &&\n                      !!e.target.files.length &&\n                      onFileUpload(e.target.files[0])\n                    }\n                    hidden\n                    type=\"file\"\n                  />\n                </Button>\n              </Box>\n            )}\n          </Dropzone>\n          {!!sanitizedPgn && (\n            <Stack spacing={4}>\n              <Divider />\n              <Box>\n                <Typography variant=\"h6\" component=\"h4\" gutterBottom>\n                  Cleaned PGN:\n                </Typography>\n                <CopyToClipboard>\n                  {({ copy }) => (\n                    <Button\n                      variant=\"contained\"\n                      color=\"success\"\n                      onClick={() => copy(sanitizedPgn)}\n                    >\n                      Copy result\n                    </Button>\n                  )}\n                </CopyToClipboard>\n                <Button\n                  sx={{ ml: 1 }}\n                  onClick={onClear}\n                  color=\"warning\"\n                  variant=\"contained\"\n                  component=\"label\"\n                >\n                  Reset\n                </Button>\n              </Box>\n              <TextareaAutosize\n                disabled\n                value={sanitizedPgn}\n                minRows={15}\n                maxRows={15}\n                placeholder=\"Result\"\n                style={{ width: \"100%\" }}\n              />\n            </Stack>\n          )}\n        </Container>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport Home from \"./Home\";\nimport { CssBaseline } from \"@mui/material\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Home />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}